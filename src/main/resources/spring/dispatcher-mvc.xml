<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-4.0.xsd  
     http://www.springframework.org/schema/tx  
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
     http://www.springframework.org/schema/jdbc  
     http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd 
     http://www.springframework.org/schema/mvc 
     http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <context:property-placeholder location="classpath*:*.properties" />

    <!-- Scans the classpath for annotated components that will be auto-registered 
        as Spring beans. For example @Controller and @Service. Make sure to set the 
        correct base-package -->
    <!-- <context:component-scan base-package="com.scott.dev" /> -->
    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <!-- base-package 如果多个，用","分隔 -->
    <context:component-scan base-package="com.scott.dev"
        use-default-filters="false">
        <context:include-filter type="annotation"
            expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!-- <context:component-scan base-package="org.jiucai.appframework" /> -->

    <!-- Activates various annotations to be detected in bean classes -->
    <context:annotation-config />

    <!-- Configures the annotation-driven Spring MVC Controller programming 
        model. Note that, with Spring 4.0, this tag works in Servlet MVC only! -->
    <!-- <mvc:annotation-driven /> -->

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />
    <!-- 静态资源映射 -->
    <mvc:resources location="/static/" mapping="/static/**"
        cache-period="31536000" />

    <bean id="contentNegotiationManager"
        class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml" />
                <entry key="json" value="application/json" />
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true" />
        <property name="favorPathExtension" value="true" />
    </bean>

    <!-- @ResponseBody -->
    <bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                    class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean
                    class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean
                    class="org.springframework.http.converter.ResourceHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <bean
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
                <prop key="java.lang.Throwable">error/500</prop>
            </props>
        </property>
    </bean>
    <!-- 支持Shiro对Controller的方法级AOP安全控制 end -->

    <!-- 解析文件上传 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="${web.maxUploadSize}" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="${web.maxInMemorySize}" />
    </bean>

    <!-- Imports outer render xml -->
    <!-- jsp -->
    <import resource="classpath:spring/spring-jsp.xml" />

    <!-- freemarker -->
    <!--<import resource="classpath:spring/spring-freemarker.xml" />-->

</beans>
